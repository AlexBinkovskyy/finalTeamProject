{"version":3,"file":"static/js/830.93d697fb.chunk.js","mappings":"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","sources":["webpack://final-team-project/./src/Pages/ChangePassPage/ChangePassPage.module.css?6c30","webpack://final-team-project/./src/components/ChangePassForm/ChangePassForm.module.css?ccce","components/ChangePassForm/ChangePassForm.jsx","Pages/ChangePassPage/ChangePassPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"divMain\":\"ChangePassPage_divMain__r+VDI\",\"div\":\"ChangePassPage_div__CppYF\",\"advantage\":\"ChangePassPage_advantage__gjp-0\"};","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"ChangePassForm_text__377CL\",\"button\":\"ChangePassForm_button__3b0qK\",\"input\":\"ChangePassForm_input__Uy08c\",\"errorInput\":\"ChangePassForm_errorInput__LmkmL\",\"error\":\"ChangePassForm_error__jLjiH\",\"errorContainer\":\"ChangePassForm_errorContainer__YraLf\",\"eyeIcon\":\"ChangePassForm_eyeIcon__P3lrV\",\"eyeBtn\":\"ChangePassForm_eyeBtn__61B2u\",\"label\":\"ChangePassForm_label__ax5UI\",\"divWrap\":\"ChangePassForm_divWrap__kei36\"};","import { useId, useState } from 'react';\nimport css from './ChangePassForm.module.css';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport Image from '../../image/sprite.svg';\nimport { recoverPass } from '../../redux/auth/operations';\nimport { useTranslation } from 'react-i18next';\n\nconst validationSchema = Yup.object().shape({\n  resetToken: Yup.string().required('Required'),\n  password: Yup.string()\n    .min(7, 'Too Short!')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\n      ' Must contain: capital, uppercase letter, number'\n    )\n    .required('Required'),\n  repeatPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n    .required('Please repeat your password'),\n});\n\nexport default function ChangePassForm() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { i18n } = useTranslation();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const codeFieldId = useId();\n  const passwordFieldId = useId();\n  const repeatPassword = useId();\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(prevState => !prevState);\n  };\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n    mode: 'onChange',\n  });\n\n  const onSubmit = ({ resetToken, password }) => {\n    resetToken = resetToken.split(' ').join('').trim();\n    dispatch(recoverPass({ credentials: { resetToken, password }, i18n }))\n      .unwrap()\n      .then(() => {\n        reset();\n        navigate('/signin');\n      });\n  };\n\n  const onClickHandler = () => {\n    navigate('/recover-page');\n  };\n\n  return (\n    <div className={css.divWrap}>\n      <p className={css.text}>Fill up form below</p>\n      <form onSubmit={handleSubmit(onSubmit)} className={css.form}>\n        <label htmlFor={codeFieldId} className={css.label}>\n          Code\n        </label>\n        <div className={css.errorContainer}>\n          <input\n            {...register('resetToken')}\n            className={`${css.input} ${errors.resetToken && css.errorInput}`}\n            id={codeFieldId}\n            placeholder=\"Enter your code\"\n            autoComplete=\"off\"\n          />\n          {errors.resetToken && (\n            <span className={css.error}>{errors.resetToken.message}</span>\n          )}\n        </div>\n\n        <label htmlFor={passwordFieldId} className={css.label}>\n          Password\n        </label>\n        <div className={css.errorContainer}>\n          <input\n            {...register('password')}\n            autoComplete=\"off\"\n            className={`${css.input} ${errors.password && css.errorInput}`}\n            id={passwordFieldId}\n            placeholder=\"Enter new password\"\n            type={showPassword ? 'text' : 'password'}\n          />\n          {errors.password && (\n            <span className={css.error}>{errors.password.message}</span>\n          )}\n\n          <button\n            type=\"button\"\n            className={css.eyeBtn}\n            onClick={togglePasswordVisibility}\n          >\n            {showPassword ? (\n              <svg className={css.eyeIcon} width=\"18\" height=\"18\">\n                <use href={`${Image}#IconEye`} />\n              </svg>\n            ) : (\n              <svg className={`${css.eyeIcon}`} width=\"18\" height=\"18\">\n                <use href={`${Image}#IconEye-off`} />\n              </svg>\n            )}\n          </button>\n        </div>\n\n        <label htmlFor={repeatPassword} className={css.label}>\n          Repeat Password\n        </label>\n        <div className={css.errorContainer}>\n          <input\n            {...register('repeatPassword')}\n            autoComplete=\"off\"\n            className={`${css.input} ${\n              errors.repeatPassword && css.errorInput\n            }`}\n            id={repeatPassword}\n            placeholder=\"Repeat password\"\n            type={showPassword ? 'text' : 'password'}\n          />\n          {errors.repeatPassword && (\n            <span className={css.error}>{errors.repeatPassword.message}</span>\n          )}\n\n          <button\n            type=\"button\"\n            className={css.eyeBtn}\n            onClick={togglePasswordVisibility}\n          >\n            {showPassword ? (\n              <svg className={css.eyeIcon} width=\"18\" height=\"18\">\n                <use href={`${Image}#IconEye`} />\n              </svg>\n            ) : (\n              <svg className={`${css.eyeIcon}`} width=\"18\" height=\"18\">\n                <use href={`${Image}#IconEye-off`} />\n              </svg>\n            )}\n          </button>\n        </div>\n\n        <ul className={css.ul}>\n          <li>\n            <button type=\"submit\" className={css.button}>\n              Send\n            </button>\n          </li>\n\n          <li>\n            <button\n              type=\"button\"\n              className={css.button}\n              onClick={onClickHandler}\n            >\n              Back\n            </button>\n          </li>\n        </ul>\n      </form>\n    </div>\n  );\n}\n","import Logo from 'components/Logo/Logo';\nimport css from './ChangePassPage.module.css';\nimport ChangePassForm from 'components/ChangePassForm/ChangePassForm';\nimport AdvantagesSection from 'Sections/AdvantagesSection/AdvantagesSection';\nimport { useSelector } from 'react-redux';\nimport { selectIsRefreshing } from '../../redux/auth/selectors';\nimport Loader from 'components/Loader/Loader';\n\nexport default function ChangePassPage() {\n  const isRefreshing = useSelector(selectIsRefreshing);\n\n  return (\n    <>\n      {isRefreshing && <Loader />}\n      <div className={css.divMain}>\n        <div className={css.div}>\n          <Logo />\n          <ChangePassForm />\n        </div>\n        <div className={css.advantage}>\n          {window.innerWidth > 1440 && <AdvantagesSection />}\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":["validationSchema","Yup","shape","resetToken","required","password","min","matches","repeatPassword","oneOf","ChangePassForm","dispatch","useDispatch","navigate","useNavigate","i18n","useTranslation","showPassword","setShowPassword","useState","codeFieldId","useId","passwordFieldId","togglePasswordVisibility","prevState","register","handleSubmit","reset","formState","errors","useForm","resolver","yupResolver","mode","_jsxs","className","css","children","_jsx","onSubmit","_ref","split","join","trim","recoverPass","credentials","unwrap","then","htmlFor","concat","id","placeholder","autoComplete","message","type","onClick","width","height","href","Image","onClickHandler","ChangePassPage","isRefreshing","useSelector","selectIsRefreshing","_Fragment","Loader","Logo","window","innerWidth","AdvantagesSection"],"sourceRoot":""}